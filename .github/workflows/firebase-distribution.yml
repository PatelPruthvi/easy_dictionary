name: CI/CD - Signed Build & Google Play Store Deployment

on:
  push:
    branches:
      - main  # Or any branch you prefer for Firebase testing

jobs:
  build-and-distribute:
    name: Build, Sign & Distribute to Google Play
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

         # ðŸŽ¯ Create firebase_options.dart dynamically from GitHub Secrets
      - name: Create firebase_options.dart
        run: echo "$FIREBASE_OPTIONS" > lib/firebase_options.dart
        shell: bash
        env:
            FIREBASE_OPTIONS: ${{ secrets.FIREBASE_OPTIONS }}

      - name: Create google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json
        shell: bash

      - name: Create Play Console Service Account Key
        run: echo '${{ secrets.PLAY_CONSOLE_SERVICE_ACCOUNT_KEY }}' > android/easydictionary-service-account-key.json
        shell: bash

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'  # Specify Flutter version

      - name: Install Dependencies
        run: flutter pub get

      - name: Decode Keystore
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
        run: echo "$ANDROID_KEYSTORE" | base64 --decode > android/app/upload-keystore.jks

      - name: Setup key.properties
        run: |
          echo "storeFile=$(pwd)/android/app/upload-keystore.jks" > android/key.properties
          echo "storePassword=${{secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{secrets.KEY_ALIAS }}" >> android/key.properties

      - name: Check if Keystore Exists
        run: |
              echo "Checking if keystore file exists..."
              ls -l android/app
              file android/app/upload-keystore.jks
              keytool -list -keystore android/app/upload-keystore.jks -storepass ${{secrets.ANDROID_KEYSTORE_PASSWORD }} -v || echo "Keystore file is missing or incorrect"

              - name: Auto Update Version (timestamp-based)
              run: |
                VERSION_NAME=$(date +'%Y.%m.%d')
                VERSION_CODE=$((10000 + $GITHUB_RUN_NUMBER))
                sed -i "s/version: .*/version: $VERSION_NAME+$VERSION_CODE/" pubspec.yaml
                echo "Updated version to $VERSION_NAME+$VERSION_CODE"

      - name: Build Signed AAB
        run: flutter build aab --release

      - name: Upload Signed AAB as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Signed Build
          path: build/app/outputs/flutter-apk/app-release.aab
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
      
      - name: Install Fastlane
        run: |
              gem install bundler
              bundle install
      
      - name: Deploy to Google Play (Fastlane)
        working-directory: android
        env:
          SUPPLY_JSON_KEY: easydictionary-service-account-key.json
        run: bundle exec fastlane deploy


      # - name: Distribute to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{ secrets.FIREBASE_APP_ID }}
      #     serviceCredentialsFileContent: ${{ secrets.SERVICE_ACCOUNT_KEY }}
      #     groups: alpha
      #     file: build/app/outputs/flutter-apk/app-release.apk
      #     releaseNotes: "Automated Signed Build for Testing"
